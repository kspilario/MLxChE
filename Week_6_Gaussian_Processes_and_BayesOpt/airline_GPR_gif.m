% t contains the Airline Passengers Data Set
t = [112; 118; 132; 129; 121; 135; 148; 148; 136; 119; 104; 118; 115;...
     126; 141; 135; 125; 149; 170; 170; 158; 133; 114; 140; 145; 150;...
     178; 163; 172; 178; 199; 199; 184; 162; 146; 166; 171; 180; 193;...
     181; 183; 218; 230; 242; 209; 191; 172; 194; 196; 196; 236; 235;...
     229; 243; 264; 272; 237; 211; 180; 201; 204; 188; 235; 227; 234;...
     264; 302; 293; 259; 229; 203; 229; 242; 233; 267; 269; 270; 315;...
     364; 347; 312; 274; 237; 278; 284; 277; 317; 313; 318; 374; 413;...
     405; 355; 306; 271; 306; 315; 301; 356; 348; 355; 422; 465; 467;...
     404; 347; 305; 336; 340; 318; 362; 348; 363; 435; 491; 505; 404;...
     359; 310; 337; 360; 342; 406; 396; 420; 472; 548; 559; 463; 407;...
     362; 405; 417; 391; 419; 461; 472; 535; 622; 606; 508; 461; 390; 432];
N = length(t); x = (1:N)'; close all;
xR = [1 200];                           % Range of inputs
X = linspace(xR(1),xR(2),200);          % Define finely separated x values
 
% Custom kernel function (SE x PER)
SExPER = @(XN,XM,theta) exp(theta(1))*(exp(-(pdist2(XN,XM).^2)/...
    (2*exp(theta(2))^2))).*exp(-2/exp(theta(3))^2*...
    sin(pi/exp(theta(4)).*bsxfun(@plus,XN,-XM')).^2);
clc; rng(2);

for j = 50:143 % No. of samples to include
 
    %% GPR Training and Testing
    x2 = x(1:j); t2 = t(1:j);
    gpr = fitrgp(x2,t2, ...
                 'KernelFunction',SExPER,...
                 'KernelParameters',0.01*ones(4,1),...
                 'Sigma',10);
    [pred,~,ci] = predict(gpr,X');
    % Note: ci = 95% prediction intervals
        
    %% Plot the results
    figure(1); 
    clf; plot(x,t,'ko-','MarkerFaceColor','k','MarkerSize',3);
    hold on; grid on; box on; xlabel('Month'); 
    ylabel('No. of Passengers (''000s)');
    scatter(x2,t2,20,'b','filled');             % Plot data points 1 to j 
    axis([xR(1) xR(2) 100 1000]);               % Fix the axes
    plot(X,pred,'r-','LineWidth',2);            % Plot mean predictions
    p = [X,        fliplr(X); 
         ci(:,1)', fliplr(ci(:,2)')];           % Boundary pts for fill
    h = fill(p(1,:),p(2,:),'m');                % Plot +/-W*s(x)
    set(h,'facealpha',0.15);                    % Make fill translucent
    title(sprintf('%d out of %d data points',j,N));
    legend({'Ground Truth Data', ...
            'Elapsed Observation',...
            'GPR: Mean Prediction', ...
            'GPR: 95% Predictive Distribution'},...
            'Location','southoutside');
    
    % Code for creating a GIF
    % exportgraphics(gcf,'airline_gpr.gif','Append',true);
        
    pause(0.1);
end
